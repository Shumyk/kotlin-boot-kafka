version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  documentDB:
    image: mongo:4
    container_name: document_db
    ports:
      - '27017:27017'
    volumes:
      - mongodb4_data:/data/db
      - ./keyfile:/opt/keyfile/
    environment:
      PUID: 1000
      PGID: 1000
      MONGO_INITDB_ROOT_USERNAME: 'robot'
      MONGO_INITDB_ROOT_PASSWORD: 'tobor'
      MONGO_INITDB_DATABASE: 'messages'
      MONGO_REPLICA_SET_NAME: 'rs0'
    command: '--bind_ip_all --keyFile /opt/keyfile --replSet rs0'
    healthcheck:
      test: test $$(echo "rs.initiate().ok || rs.status().ok" | mongo -u $${MONGO_INITDB_ROOT_USERNAME} -p $${MONGO_INITDB_ROOT_PASSWORD} --quiet) -eq 1
      interval: 10s
      start_period: 30s

  kafka-service:
    image: globwizards/kotlin-kafka-service
    container_name: kafka-service
    depends_on:
      - kafka
      - documentDB
    environment:
      KAFKA_BOOTSTRAP_SERVERS: 'kafka:9092'
      DB_HOST: 'documentDB'
      DB_USER: 'robot'
      DB_PSWD: 'tobor'
      DB_DATABASE: 'messages'
    ports:
      - '8080:8080'

volumes:
  mongodb4_data: